<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="mg32f02" />
		<Option makefile_is_custom="1" />
		<Option pch_mode="2" />
		<Option compiler="arm-elf-gcc" />
		<Build>
			<Target title="premake">
				<Option output="default/image.elf" prefix_auto="0" extension_auto="0" />
				<Option object_output="default" />
				<Option type="1" />
				<Option compiler="arm-elf-gcc" />
				<MakeCommands>
					<Build command="premake5 gmake" />
					<CompileFile command="" />
					<Clean command="" />
					<DistClean command="$make -f $makefile distclean$target" />
					<AskRebuildNeeded command="" />
					<SilentBuild command="premake5 gmake &gt; $(CMD_NULL)" />
				</MakeCommands>
			</Target>
			<Target title="svr32">
				<Option output="default/image.elf" prefix_auto="0" extension_auto="0" />
				<Option object_output="default" />
				<Option type="1" />
				<Option compiler="arm-elf-gcc" />
				<MakeCommands>
					<Build command="make svr32" />
					<CompileFile command="make -f svr32.make $file" />
					<Clean command="make -f svr32.make clean" />
					<DistClean command="$make -f $makefile distclean$target" />
					<AskRebuildNeeded command="make -q -f svr32.make" />
					<SilentBuild command="make svr32 &gt; $(CMD_NULL)" />
				</MakeCommands>
			</Target>
			<Target title="svr64_ram">
				<Option output="megawin" prefix_auto="1" extension_auto="1" />
				<Option type="0" />
				<Option compiler="arm-elf-gcc" />
				<MakeCommands>
					<Build command="make svr64_ram" />
					<CompileFile command="make -f svr64_ram.make $file" />
					<Clean command="make -f svr64_ram.make clean" />
					<DistClean command="$make -f $makefile distclean$target" />
					<AskRebuildNeeded command="make -q -f svr64_ram.make" />
					<SilentBuild command="make svr64_ram &gt; $(CMD_NULL)" />
				</MakeCommands>
			</Target>
			<Target title="svr64_rom">
				<Option output="megawin" prefix_auto="1" extension_auto="1" />
				<Option type="0" />
				<Option compiler="arm-elf-gcc" />
				<MakeCommands>
					<Build command="make svr64_rom" />
					<CompileFile command="make -f svr64_rom.make $file" />
					<Clean command="make -f svr64_rom.make clean" />
					<DistClean command="$make -f $makefile distclean$target" />
					<AskRebuildNeeded command="make -q -f svr64_rom.make" />
					<SilentBuild command="make svr64_rom &gt; $(CMD_NULL)" />
				</MakeCommands>
			</Target>
			<Target title="app">
				<Option output="megawin" prefix_auto="1" extension_auto="1" />
				<Option type="0" />
				<Option compiler="arm-elf-gcc" />
				<ExtraCommands>
					<Add after="./run_app" />
				</ExtraCommands>
				<MakeCommands>
					<Build command="make app" />
					<CompileFile command="make -f app.make $file" />
					<Clean command="make -f app.make clean" />
					<DistClean command="$make -f $makefile distclean$target" />
					<AskRebuildNeeded command="make -q -f app.make" />
					<SilentBuild command="make app &gt; $(CMD_NULL)" />
				</MakeCommands>
			</Target>
			<Target title="clock">
				<Option output="megawin" prefix_auto="1" extension_auto="1" />
				<Option type="1" />
				<Option compiler="arm-elf-gcc" />
				<Option use_console_runner="0" />
				<ExtraCommands>
					<Add after="./run_clock" />
				</ExtraCommands>
				<MakeCommands>
					<Build command="make clock" />
					<CompileFile command="make -f clock.make $file" />
					<Clean command="make -f clock.make clean" />
					<DistClean command="$make -f $makefile distclean$target" />
					<AskRebuildNeeded command="make -q -f clock.make" />
					<SilentBuild command="make clock &gt; $(CMD_NULL)" />
				</MakeCommands>
			</Target>
			<Target title="slave">
				<Option output="megawin" prefix_auto="1" extension_auto="1" />
				<Option type="1" />
				<Option compiler="arm-elf-gcc" />
				<Option use_console_runner="0" />
				<ExtraCommands>
					<Add after="./run_slave" />
				</ExtraCommands>
				<MakeCommands>
					<Build command="make slave" />
					<CompileFile command="make -f slave.make $file" />
					<Clean command="make -f slave.make clean" />
					<DistClean command="$make -f $makefile distclean$target" />
					<AskRebuildNeeded command="make -q -f slave.make" />
					<SilentBuild command="make slave &gt; $(CMD_NULL)" />
				</MakeCommands>
			</Target>
			<Target title="spim">
				<Option output="megawin" prefix_auto="1" extension_auto="1" />
				<Option type="0" />
				<Option compiler="arm-elf-gcc" />
				<MakeCommands>
					<Build command="make spim" />
					<CompileFile command="make -f spim.make $file" />
					<Clean command="make -f spim.make clean" />
					<DistClean command="$make -f $makefile distclean$target" />
					<AskRebuildNeeded command="make -q -f spim.make" />
					<SilentBuild command="make spim &gt; $(CMD_NULL)" />
				</MakeCommands>
			</Target>
			<Environment>
				<Variable name="TP" value="$(TARGET_COMPILER_DIR)bin/arm-none-eabi-" />
			</Environment>
		</Build>
		<Compiler>
			<Add option="-mthumb" />
			<Add option="-Os" />
			<Add option="-Wall" />
			<Add option="-g" />
			<Add option="-fno-common" />
			<Add option="-mcpu=cortex-m0" />
			<Add option="-ffunction-sections" />
			<Add option="-fdata-sections" />
			<Add option="-nostdlib" />
			<Add option="-DMG32F02A032" />
			<Add directory="/opt/arm/megawin/DFP/MG32x02z" />
			<Add directory="/opt/arm/megawin/DFP/MG32x02z/MG32F02A032/Include" />
			<Add directory="/opt/arm/megawin/DFP/MG32x02z/MG32F02A_Driver/Include" />
			<Add directory="/opt/arm/CMSIS" />
			<Add directory="/opt/arm/CMSIS/CMSIS/Core/Include" />
			<Add directory="src" />
			<Add directory="/opt/arm/megawin/DFP/MG32x02z/Common/Initial/Include" />
			<Add directory="/opt/arm/megawin/DFP/MG32x02z/Package/MG32F02A032" />
		</Compiler>
		<Linker>
			<Add option="-Wl,-Map,map.txt" />
			<Add option="-mcpu=cortex-m0" />
			<Add option="-T ld/mg32f02a032.ld" />
			<Add option="-ffunction-sections" />
			<Add option="-fdata-sections" />
			<Add option="--specs=nosys.specs" />
			<Add option="-nostdlib" />
		</Linker>
		<Unit filename="ic/ds3231.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="ic/ds3231.h" />
		<Unit filename="ic/enc28j60.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="ic/enc28j60.h" />
		<Unit filename="ic/tm1637.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="ic/tm1637.h" />
		<Unit filename="ld/mg32f02a032_app.ld">
			<Option target="clock" />
			<Option target="slave" />
		</Unit>
		<Unit filename="ld/mg32f02a032_svr.ld">
			<Option target="svr64_ram" />
			<Option target="svr64_rom" />
			<Option target="spim" />
		</Unit>
		<Unit filename="ld/mg32f02a064_app_ram.ld" />
		<Unit filename="ld/mg32f02a064_app_rom.ld" />
		<Unit filename="ld/mg32f02a064_svr.ld" />
		<Unit filename="premake5.lua">
			<Option target="svr32" />
			<Option target="premake" />
		</Unit>
		<Unit filename="src/adc.c">
			<Option compilerVar="CPP" />
		</Unit>
		<Unit filename="src/adc.h" />
		<Unit filename="src/api.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/api.h" />
		<Unit filename="src/app.c">
			<Option compilerVar="CC" />
			<Option target="clock" />
			<Option target="slave" />
		</Unit>
		<Unit filename="src/app_clock.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/app_slave.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/cmp.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/cmp.h" />
		<Unit filename="src/core.h" />
		<Unit filename="src/dma.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/dma.h" />
		<Unit filename="src/ethernet.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/ethernet.h" />
		<Unit filename="src/hwcf.h" />
		<Unit filename="src/i2c.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/i2c.h" />
		<Unit filename="src/init.c">
			<Option compilerVar="CC" />
			<Option target="svr32" />
			<Option target="premake" />
		</Unit>
		<Unit filename="src/init.h">
			<Option target="svr32" />
			<Option target="premake" />
		</Unit>
		<Unit filename="src/main.c">
			<Option compilerVar="CC" />
			<Option target="svr32" />
			<Option target="premake" />
		</Unit>
		<Unit filename="src/nco.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/nco.h" />
		<Unit filename="src/rtc.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/rtc.h" />
		<Unit filename="src/spi.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/spi.h" />
		<Unit filename="src/startup.c">
			<Option compilerVar="CC" />
			<Option target="svr32" />
			<Option target="premake" />
		</Unit>
		<Unit filename="src/svr.c">
			<Option compilerVar="CC" />
			<Option target="svr64_ram" />
			<Option target="app" />
			<Option target="spim" />
			<Option target="svr64_rom" />
		</Unit>
		<Unit filename="src/svr.h">
			<Option target="svr64_ram" />
			<Option target="app" />
			<Option target="spim" />
			<Option target="svr64_rom" />
		</Unit>
		<Unit filename="src/timer.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/timer.h" />
		<Unit filename="src/uart.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/uart.h" />
		<Unit filename="src/ulib.c">
			<Option compilerVar="CPP" />
		</Unit>
		<Unit filename="src/ulib.h" />
		<Unit filename="src/utils.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/utils.h" />
		<Unit filename="src/wdt.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="src/wdt.h" />
		<Unit filename="test/adc_test.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="test/adc_test.h" />
		<Unit filename="test/crc_test.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="test/i2c_test.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="test/i2c_test.h" />
		<Unit filename="test/spi_test.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="test/spi_test.h" />
		<Unit filename="test/st_rtc_test.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="test/st_rtc_test.h" />
		<Unit filename="test/timer_test.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="test/timer_test.h" />
		<Unit filename="test/wdt_test.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="test/wdt_test.h" />
		<Extensions>
			<debugger>
				<remote_debugging>
					<options conn_type="0" ip_address="127.0.0.1" ip_port="3333" />
				</remote_debugging>
			</debugger>
			<lib_finder disable_auto="1" />
		</Extensions>
	</Project>
</CodeBlocks_project_file>
