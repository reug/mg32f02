# Adapt based on what transport is active.
source [find target/swj-dp.tcl]

set CHIPSERIES mg32f02a

if { [info exists CHIPNAME] } {
	set _CHIPNAME $CHIPNAME
}

if { [info exists CHIPSERIES] } {
	set _CHIPSERIES $CHIPSERIES
}

# After reset, the chip is clocked by an internal RC oscillator.
if { [info exists CCLK] } {
	# Allow user override
	set _CCLK $CCLK
} else {
  set _CCLK 12000
}

if { [info exists CPUTAPID] } {
	# Allow user override
	set _CPUTAPID $CPUTAPID
}

if { [info exists WORKAREASIZE] } {
	set _WORKAREASIZE $WORKAREASIZE
} else {
	error "WORKAREASIZE is not set. The $CHIPNAME part is available in several Flash and RAM size configurations. Please set WORKAREASIZE."
}


# Настройка DAP (Debug Access Port)
swj_newdap $_CHIPNAME cpu -irlen 4 -expected-id $_CPUTAPID
dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu


# https://openocd.org/doc-release/html/CPU-Configuration.html#CPU-Configuration
set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME cortex_m -dap $_CHIPNAME.dap

# INFO: -work-area-phys address – set the work area base address to be used when no MMU is active.
# INFO: -work-area-size size – specify work are size, in bytes. The same size applies regardless of whether its physical or virtual address is being used.
$_TARGETNAME configure -work-area-phys 0x20000000 -work-area-size $_WORKAREASIZE


# Flash areas setup
# https://openocd.org/doc-release/html/Flash-Commands.html#Flash-Commands
# flash bank <name> <driver> <base> <size> 0 0 <target#> <variant> <clock> [calc checksum] [iap entry]

# Драйвер на Си для серии MG32F02 пока не разработан. Используем отдельные процедуры на Tcl.
source "mg32f02_mem_ap.tcl"

set _IAP_ENTRY 0
if { [info exists IAP_ENTRY] } {
	set _IAP_ENTRY $IAP_ENTRY
}
set _FLASHNAME $_CHIPNAME.flash

# Maximum working speed without errors
adapter speed 480
